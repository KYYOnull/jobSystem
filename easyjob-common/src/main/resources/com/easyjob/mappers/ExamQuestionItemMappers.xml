<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyjob.mappers.ExamQuestionItemMappers">
	<!--实体映射-->
	<resultMap id="base_result_map" type="com.easyjob.entity.po.ExamQuestionItem">
		<!-- 选项ID-->
		<id column="item_id" property="itemId"/>
		<!-- 问题ID-->
		<result column="question_id" property="questionId"/>
		<!-- 标题-->
		<result column="title" property="title"/>
		<!-- 排序-->
		<result column="sort" property="sort"/>
	</resultMap>

	<!-- 固定查询字段 -->
	<sql id="base_column_list">
		e.item_id,e.question_id,e.title,e.sort
	</sql>

	<!-- 基本查询 -->
	<sql id="field_condition">
		<if test="query.itemId != null">
			and e.item_id = #{query.itemId}
		</if>
		<if test="query.questionId != null">
			and e.question_id = #{query.questionId}
		</if>
		<if test="query.title != null and query.title != '' ">
			and e.title = #{query.title}
		</if>
		<if test="query.sort != null">
			and e.sort = #{query.sort}
		</if>
	</sql>

	<!-- 通用扩展查询 -->
	<sql id="query_condition">
		<where>
			<include refid="field_condition" />
			<if test = "query.titleFuzzy != null and query.titleFuzzy != ''">
				and e.title like concat('%', #{query.titleFuzzy}, '%')
			</if>
		</where>
	</sql>

	<!-- selectList 分页排序 -->
	<select id="selectList" resultMap="base_result_map">
		SELECT
		<include refid="base_column_list"/>
		FROM exam_question_item e
		<include refid="query_condition"/>
		<if test="query.orderBy!=null">
			order by ${query.orderBy}
		</if>
		<if test="query.simplePage!=null">
			limit #{query.simplePage.start}, #{query.simplePage.end}
		</if>
	</select>

	<!-- 查询数量 -->
	<select id="selectCount" resultType="java.lang.Integer">
		SELECT count(1) FROM exam_question_item e
		<include refid="query_condition" />
	</select>

	<!--插入 匹配有值字段-->
	<insert id="insert" parameterType="com.easyjob.entity.po.ExamQuestionItem">
		<selectKey keyProperty="bean.itemId" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO exam_question_item
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.questionId != null">
				question_id,
			</if>
			<if test="bean.title != null">
				title,
			</if>
			<if test="bean.sort != null">
				sort,
			</if>
		</trim>
		<trim prefix="values(" suffix=")" suffixOverrides=",">
			<if test="bean.questionId != null">
				#{bean.questionId},
			</if>
			<if test="bean.title != null">
				#{bean.title},
			</if>
			<if test="bean.sort != null">
				#{bean.sort},
			</if>
		</trim>
	</insert>

	<!-- 插入或者更新 （匹配有值的字段）-->
	<insert id="insertOrUpdate" parameterType="com.easyjob.entity.po.ExamQuestionItem">
		INSERT INTO exam_question_item
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.itemId != null">
				item_id,
			</if>
			<if test="bean.questionId != null">
				question_id,
			</if>
			<if test="bean.title != null">
				title,
			</if>
			<if test="bean.sort != null">
				sort,
			</if>
		</trim>
		<trim prefix="values(" suffix=")" suffixOverrides=",">
			<if test="bean.itemId != null">
				#{bean.itemId},
			</if>
			<if test="bean.questionId != null">
				#{bean.questionId},
			</if>
			<if test="bean.title != null">
				#{bean.title},
			</if>
			<if test="bean.sort != null">
				#{bean.sort},
			</if>
		</trim>
		on DUPLICATE key update
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="bean.questionId!=null">
				question_id = VALUES(question_id),
			</if>
			<if test="bean.title!=null">
				title = VALUES(title),
			</if>
			<if test="bean.sort!=null">
				sort = VALUES(sort),
			</if>
		</trim>
	</insert>

	<!-- 批量插入-->
	<insert id="insertBatch" parameterType="com.easyjob.entity.po.ExamQuestionItem"
			useGeneratedKeys="true" keyProperty="itemId">
		INSERT INTO exam_question_item
		(question_id,title,sort
		) values
		<foreach collection="list" item="item" separator=",">
			(#{item.questionId},#{item.title},#{item.sort})
		</foreach>
	</insert>

	<!-- 批量插入或更新 主键或唯一键冲突时，自动执行更新 -->
	<insert id="insertOrUpdateBatch" parameterType="com.easyjob.entity.po.ExamQuestionItem">
		INSERT INTO exam_question_item
		(question_id,title,sort) values
		<foreach collection="list" item="it" separator=",">
			(#{it.questionId},#{it.title},#{it.sort})
		</foreach>
		on DUPLICATE key update
		question_id = VALUES(question_id),
		title = VALUES(title),
		sort = VALUES(sort)
	</insert>

	<!-- 多条件更新 -->
	<update id="updateByParam" parameterType="com.easyjob.entity.query.ExamQuestionItemQuery">
		UPDATE exam_question_item e
		<set>
			<if test="bean.questionId != null">
				question_id = #{bean.questionId},
			</if>
			<if test="bean.title != null">
				title = #{bean.title},
			</if>
			<if test="bean.sort != null">
				sort = #{bean.sort},
			</if>
		</set>
		<include refid="query_condition" />
	</update>

	<!--多条件删除-->
	<delete id="deleteByParam">
		delete e from exam_question_item e
		<include refid="query_condition" />
	</delete>

	<!-- 根据ItemId查询 -->
	<select id="selectExamQuestionItemByItemId" resultMap="base_result_map">
		select <include refid="base_column_list"/> from exam_question_item e where item_id = #{itemId}
	</select>
	<!-- 根据ItemId更新 -->
	<update id="updateExamQuestionItemByItemId" parameterType="com.easyjob.entity.po.ExamQuestionItem">
		UPDATE exam_question_item
		<set>
			<if test="bean.questionId != null">
				question_id = #{bean.questionId},
			</if>
			<if test="bean.title != null">
				title = #{bean.title},
			</if>
			<if test="bean.sort != null">
				sort = #{bean.sort},
			</if>
		</set>
		where item_id = #{itemId}
	</update>
	<!-- 根据ItemId删除 -->
	<delete id="delExQsItByItemId">
		delete from exam_question_item where item_id = #{itemId}
	</delete>
	
	<delete id="delExQsItBatchByItIds">
		delete from exam_question_item where item_id in
		<foreach collection="itemIdList" separator="," item="it">#{it}</foreach>
	</delete>

	<!-- 根据 question_id 删除选项  其中传入的 qsIdList 中多个 question_id 必须是当前人发布的问题 状态要满足 -->
	<!-- userid 用于防止绕过 -->
	<delete id="delExQsItBatchByQsIds">
		delete from exam_question_item where question_id in(
		    select question_id from exam_question where status = #{status}
				<if test="userId != null">
					and create_user_id = #{userId}
				</if>
				and question_id in(
				    <foreach collection="qsIdList" separator="," item="it">#{it}</foreach>
				)
		)
	</delete>

</mapper>